{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namh0\\\\words-game\\\\src\\\\Componentes\\\\Ahorcado.js\";\nimport React, { Component } from 'react';\nimport Imagen from './Imagen';\nimport Palabra_Adivinada_Hasta_El_Momento from './Palabra_Adivinada_Hasta_El_Momento';\nimport Botonera from './Botonera';\n\nclass Ahorcado extends Component {\n  constructor(props) {\n    super(props);\n    this.getBotoneraVacia = this.getBotoneraVacia.bind(this);\n    this.Se_Pulso_Boton = this.Se_Pulso_Boton.bind(this);\n    this.getPalabra_Adivinada = this.getPalabra_Adivinada.bind(this);\n    this.getPalabra_Adivinada_Hasta_El_Momento = this.getPalabra_Adivinada_Hasta_El_Momento.bind(this);\n    let Palabra_Adivinada = this.getPalabra_Adivinada();\n    this.state = {\n      numFallos: 0,\n      numAciertos: 0,\n      Palabra_Adivinada: Palabra_Adivinada,\n      palabra_Adivinada_Hasta_El_Momento: this.getPalabra_Adivinada_Hasta_El_Momento(this.palabra),\n      botones: this.getBotoneraVacia()\n    };\n  }\n\n  getPalabra_Adivinada_Hasta_El_Momento(palabra) {\n    let guiones = \"\";\n\n    for (let i = 0; i < palabra.length; i++) {\n      guiones += \"-\";\n    }\n\n    return guiones;\n  }\n\n  getPalabra_Adivinada() {\n    let palabras = [\"CARACOLA\", \"ESPECIMEN\", \"PERSONA\"];\n    let Num_Aleatorio = Math.floor(Math.random() * palabras.length);\n    palabra = palabras[Num_Aleatorio];\n    return;\n  }\n\n  getBotoneraVacia() {\n    let letras = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n    let botones = [];\n    botones = letras.map(l => ({\n      letra: l,\n      estado: \"no-pulsado\"\n    }));\n    return botones;\n  }\n\n  Se_Pulso_Boton(i) {\n    let letra = this.state.botones[i].letra;\n    let botonesAux = this.state.botones;\n\n    if (this.Hay_Acierto(letra)) {\n      botonesAux[i].estado = \"pulsado-acertado\";\n      this.setState(Prev_State => ({\n        botones: botonesAux\n      }));\n    } else {\n      botonesAux[i].estado = \"pulsado-no-acertado\";\n      this.setState(Prev_State => ({\n        numFallos: ++Prev_State.numFallos,\n        botones: botonesAux\n      }));\n    }\n  }\n\n  Hay_Acierto(letra) {\n    for (let i = 0; i < this.state.Palabra_Adivinada.length; i++) {\n      if (this.state.Palabra_Adivinada.charAt(i) === letra) {\n        this.setState(Prev_State => ({\n          numAciertos: ++Prev_State.numAciertos,\n          palabra_Adivinada_Hasta_El_Momento: Prev_State.palabra_Adivinada_Hasta_El_Momento.substr(0, i) + letra + Prev_State.palabra_Adivinada_Hasta_El_Momento.substr(i + 1)\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Imagen, {\n      numFallos: this.state.numFallos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Palabra_Adivinada_Hasta_El_Momento, {\n      Palabra_Adivinada_Hasta_El_Momento: this.state.palabra_Adivinada_Hasta_El_Momento,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Botonera, {\n      Se_Pulso_Boton: i => this.Se_Pulso_Boton(i),\n      botones: this.state.botones,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Ahorcado;","map":{"version":3,"sources":["C:/Users/namh0/words-game/src/Componentes/Ahorcado.js"],"names":["React","Component","Imagen","Palabra_Adivinada_Hasta_El_Momento","Botonera","Ahorcado","constructor","props","getBotoneraVacia","bind","Se_Pulso_Boton","getPalabra_Adivinada","getPalabra_Adivinada_Hasta_El_Momento","Palabra_Adivinada","state","numFallos","numAciertos","palabra_Adivinada_Hasta_El_Momento","palabra","botones","guiones","i","length","palabras","Num_Aleatorio","Math","floor","random","letras","map","l","letra","estado","botonesAux","Hay_Acierto","setState","Prev_State","charAt","substr","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Imagen from './Imagen';\nimport Palabra_Adivinada_Hasta_El_Momento from './Palabra_Adivinada_Hasta_El_Momento';\nimport Botonera from './Botonera';\n\nclass Ahorcado extends Component{\n  constructor(props){\n    super(props);\n    \n    this.getBotoneraVacia = this.getBotoneraVacia.bind(this);\n    this.Se_Pulso_Boton = this.Se_Pulso_Boton.bind(this);\n    this.getPalabra_Adivinada = this.getPalabra_Adivinada.bind(this);\n    this.getPalabra_Adivinada_Hasta_El_Momento = this.getPalabra_Adivinada_Hasta_El_Momento.bind(this);\n\n    let Palabra_Adivinada = this.getPalabra_Adivinada();\n\n    this.state={\n      numFallos: 0,\n      numAciertos: 0,\n      Palabra_Adivinada: Palabra_Adivinada,\n      palabra_Adivinada_Hasta_El_Momento: this.getPalabra_Adivinada_Hasta_El_Momento(this.palabra),\n      botones: this.getBotoneraVacia()\n    };\n  }\n  getPalabra_Adivinada_Hasta_El_Momento(palabra){\n    let guiones = \"\";\n    for(let i = 0; i < palabra.length; i++){\n      guiones += \"-\";\n    }\n    return guiones;\n  }\n\n  getPalabra_Adivinada(){\n    let palabras = [\"CARACOLA\", \"ESPECIMEN\", \"PERSONA\"];\n    let Num_Aleatorio = Math.floor(Math.random()*palabras.length);\n    palabra = palabras[Num_Aleatorio];\n    return;\n  }\n\n  getBotoneraVacia(){\n    let letras = [\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",\n        \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\",\n        \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\",\n        \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\n    ];\n\n    let botones = [];\n\n    botones = letras.map((l)=> ({letra: l, estado: \"no-pulsado\"}));\n\n    return botones;\n  }\n\nSe_Pulso_Boton(i){\n  let letra = this.state.botones[i].letra;\n  let botonesAux = this.state.botones;\n  \n\n  if(this.Hay_Acierto(letra)){\n    botonesAux[i].estado = \"pulsado-acertado\";\n    this.setState((Prev_State) => ({\n      botones: botonesAux\n    }));\n  } else{\n    botonesAux[i].estado = \"pulsado-no-acertado\";\n    this.setState((Prev_State) => ({\n      numFallos: ++(Prev_State.numFallos),\n      botones: botonesAux\n    }));\n  }\n}\n\nHay_Acierto(letra){\n  for(let i = 0; i < this.state.Palabra_Adivinada.length; i++){\n    if(this.state.Palabra_Adivinada.charAt(i) === letra){\n      this.setState((Prev_State) => ({\n        numAciertos: ++(Prev_State.numAciertos),\n        palabra_Adivinada_Hasta_El_Momento: Prev_State.palabra_Adivinada_Hasta_El_Momento.substr(0, i) +\n        letra + Prev_State.palabra_Adivinada_Hasta_El_Momento.substr(i + 1)\n      }));\n    }\n    \n  }\n}\nrender() {\n  return (\n    <div>\n        <Imagen numFallos={this.state.numFallos}/>\n\n        <Palabra_Adivinada_Hasta_El_Momento\n        Palabra_Adivinada_Hasta_El_Momento = {this.state.palabra_Adivinada_Hasta_El_Momento}/>\n\n        <Botonera Se_Pulso_Boton = {(i) => this.Se_Pulso_Boton(i)} botones = {this.state.botones}/>\n\n       </div>\n    );\n  }\n}\n\nexport default Ahorcado;\n"]},"metadata":{},"sourceType":"module"}